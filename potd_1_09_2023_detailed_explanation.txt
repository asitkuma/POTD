So in this given question it was mentioned that u need to find the left most and rightmost as well.so first questioin that comes to mind that how i will find the left one and  right one.so one thing is to notice here that if u will keep all the elments in each level then u may noticed that every time the first element of that list and the last element of that list is the answer right!! cool...now again question arises how u will find all the elements of each level.lets say heigh of the tree is 2(You can identify by counting the number of edges) and u r standing at the top.what is the leftmost and rightmost element for that level that element itself right..?? cool..what  are the possible elements that should appear in 1'st level 2 right!!! so if u check at root.(left!=None and root.right!=None) if any of this condition satisfied then simply insert that element and at the end u would notice that in the queue(why queue?? suppose u r standing at root then u must find the left element and right element so here we can easily delete the root element by inserting the left and right node of that node... thats why queue is useful .In python we can implement by list data structure) all the operation is going on by inserting all the child node by deleting the parent node...and at the end(for the last level..queue becomes null)..A point to be notice that while we are deleting the parent node before that we need to save to any temporary vector or list later on we will push or append the temp vector (which contain all all the level nodes) to our main list(which would be vector<vector>>)2d(array)..then by simply traversing we can get our desired answer